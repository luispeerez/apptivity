/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the tempe in the editor.
 */
package Form;

import Clases.NuevoPDF;
import Clases.Variables;
import MySQL.Funcion;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.IOException;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.application.Platform;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.embed.swing.JFXPanel;
import javafx.embed.swing.SwingFXUtils;
import javafx.event.EventHandler;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.SnapshotParameters;
import javafx.scene.chart.BarChart;
import javafx.scene.chart.CategoryAxis;
import javafx.scene.chart.NumberAxis;
import javafx.scene.chart.PieChart;
import javafx.scene.chart.XYChart;
import javafx.scene.control.Label;
import javafx.scene.control.Tooltip;
import javafx.scene.image.WritableImage;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.DateFormatter;
import javax.swing.text.DefaultFormatterFactory;
import org.apache.commons.io.FileUtils;
import org.apache.commons.io.FilenameUtils;

/**
 *
 * @author Acer
 */
public class Principal extends javax.swing.JFrame {

    static Statement st;
    static ResultSet Comando;
    static Boolean estado_BotonPerfil = false, estado_BotonDepa = false;
    static String[][] registros;
    JFXPanel fxPanel, fxPanel2;
    boolean TerminarCargar;
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        setLocationRelativeTo(null);
        Funcion.CrearConexion();
        st = Funcion.conexion();
        PerfilUsuario();
        filtro_dominios();
        jSpinnerFormato();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel8 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jButton14 = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox7 = new javax.swing.JComboBox();
        jPanel18 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jComboBox8 = new javax.swing.JComboBox();
        FiltroDominios = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jTextField7 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jPasswordField2 = new javax.swing.JPasswordField();
        jButton9 = new javax.swing.JButton();
        jSpinner1 = new javax.swing.JSpinner();
        ReporteUsuario = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jPanel15 = new javax.swing.JPanel();
        jButton13 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(44, 44, 44));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton4.setBackground(new java.awt.Color(44, 44, 44));
        jButton4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Filtro de Dominios");
        jButton4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jButton4.setContentAreaFilled(false);
        jButton4.setFocusPainted(false);
        jButton4.setOpaque(true);
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton4MouseExited(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 470, 200, 70));

        jButton5.setBackground(new java.awt.Color(44, 44, 44));
        jButton5.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Perfil de Usuario");
        jButton5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jButton5.setContentAreaFilled(false);
        jButton5.setFocusPainted(false);
        jButton5.setOpaque(true);
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton5MouseExited(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 260, 200, 70));

        jButton6.setBackground(new java.awt.Color(44, 44, 44));
        jButton6.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Usuarios Monitoreados");
        jButton6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jButton6.setContentAreaFilled(false);
        jButton6.setFocusPainted(false);
        jButton6.setOpaque(true);
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton6MouseExited(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 330, 200, 70));

        jButton7.setBackground(new java.awt.Color(44, 44, 44));
        jButton7.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Reporte General");
        jButton7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jButton7.setContentAreaFilled(false);
        jButton7.setFocusPainted(false);
        jButton7.setOpaque(true);
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton7MouseExited(evt);
            }
        });
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 400, 200, 70));

        jButton8.setBackground(new java.awt.Color(44, 44, 44));
        jButton8.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Configuración");
        jButton8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jButton8.setContentAreaFilled(false);
        jButton8.setFocusPainted(false);
        jButton8.setOpaque(true);
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton8MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton8MouseExited(evt);
            }
        });
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 540, 200, 70));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/LOGO.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 650));

        jTabbedPane2.setBackground(java.awt.Color.white);
        jTabbedPane2.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jPanel3.setBackground(new java.awt.Color(243, 243, 243));

        jPanel9.setBackground(Color.white);
        jPanel9.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel9.setEnabled(false);
        jPanel9.setMaximumSize(new java.awt.Dimension(724, 278));
        jPanel9.setName(""); // NOI18N
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/LOGO.png"))); // NOI18N
        jLabel1.setToolTipText("Haz click para cambiar tu foto de perfil.");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jPanel9.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 210, 180));

        jPanel7.setBackground(Color.white);
        jPanel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel7.setEnabled(false);
        jPanel7.setMaximumSize(new java.awt.Dimension(724, 278));
        jPanel7.setName(""); // NOI18N
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel8.setText("Nombre de Usuario:");
        jPanel7.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        jLabel9.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel9.setText("Nick de Usuario:");
        jPanel7.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, 130, -1));

        jTextField5.setEditable(false);
        jTextField5.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jPanel7.add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, 320, 30));

        jTextField10.setEditable(false);
        jTextField10.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jPanel7.add(jTextField10, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 320, 30));

        jLabel11.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel11.setText("Ocupación:");
        jPanel7.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, -1, -1));

        jTextField6.setEditable(false);
        jTextField6.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jTextField6.setMaximumSize(new java.awt.Dimension(6, 24));
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });
        jPanel7.add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, 320, 30));

        jLabel12.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel12.setText("Contraseña:");
        jPanel7.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, -1, -1));

        jPasswordField1.setEditable(false);
        jPasswordField1.setText("jPasswordField1");
        jPanel7.add(jPasswordField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, 320, -1));

        jButton2.setBackground(new java.awt.Color(0, 153, 255));
        jButton2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButton2.setText("Editar Datos");
        jButton2.setFocusPainted(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("tab2", jPanel3);

        jPanel4.setBackground(new java.awt.Color(243, 243, 243));
        jPanel4.setLayout(null);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel8.setBackground(new java.awt.Color(243, 243, 243));
        jPanel8.setPreferredSize(new java.awt.Dimension(870, 660));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 870, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 660, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jPanel8);

        jPanel4.add(jScrollPane1);
        jScrollPane1.setBounds(10, -5, 870, 660);

        jTabbedPane2.addTab("tab3", jPanel4);

        jPanel5.setBackground(new java.awt.Color(243, 243, 243));

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));
        jPanel16.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 780, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 438, Short.MAX_VALUE)
        );

        jButton14.setBackground(new java.awt.Color(0, 153, 255));
        jButton14.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButton14.setText("Guardar en PDF");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));
        jPanel17.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel6.setText("Plazo de monitoreo:");

        jComboBox7.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Diario", "Semanal", "Mensual" }));
        jComboBox7.setSelectedItem("Semanal");
        jComboBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jComboBox7, 0, 134, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));
        jPanel18.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel7.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel7.setText("Departamento:");

        jComboBox8.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jComboBox8.setSelectedItem("Semanal");
        jComboBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jComboBox8, 0, 195, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(310, 310, 310))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jTabbedPane2.addTab("tab4", jPanel5);

        FiltroDominios.setBackground(new java.awt.Color(243, 243, 243));

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel4.setText("Filtrado por:");

        jComboBox6.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jComboBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox6ActionPerformed(evt);
            }
        });

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel6.setLayout(null);
        jScrollPane2.setViewportView(jPanel6);

        javax.swing.GroupLayout FiltroDominiosLayout = new javax.swing.GroupLayout(FiltroDominios);
        FiltroDominios.setLayout(FiltroDominiosLayout);
        FiltroDominiosLayout.setHorizontalGroup(
            FiltroDominiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FiltroDominiosLayout.createSequentialGroup()
                .addContainerGap(101, Short.MAX_VALUE)
                .addGroup(FiltroDominiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FiltroDominiosLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(265, 265, 265))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FiltroDominiosLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76))))
        );
        FiltroDominiosLayout.setVerticalGroup(
            FiltroDominiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FiltroDominiosLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(FiltroDominiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("filtro", FiltroDominios);

        jPanel2.setBackground(new java.awt.Color(243, 243, 243));
        jPanel2.setLayout(null);

        jPanel12.setBackground(Color.white);
        jPanel12.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel12.setEnabled(false);
        jPanel12.setMaximumSize(new java.awt.Dimension(724, 278));
        jPanel12.setName(""); // NOI18N
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel20.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel20.setText("Usuario:");
        jPanel12.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 30, -1, -1));

        jComboBox5.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox5ItemStateChanged(evt);
            }
        });
        jPanel12.add(jComboBox5, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 190, 30));

        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });
        jPanel12.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 200, 30));

        jLabel18.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel18.setText("Departamento:");
        jPanel12.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel19.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("Nuevo nombre:");
        jPanel12.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, -1, -1));

        jTextField12.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jPanel12.add(jTextField12, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 70, 320, -1));

        jPanel2.add(jPanel12);
        jPanel12.setBounds(70, 330, 660, 70);

        jPanel11.setBackground(Color.white);
        jPanel11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel11.setEnabled(false);
        jPanel11.setMaximumSize(new java.awt.Dimension(724, 278));
        jPanel11.setName(""); // NOI18N
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jPanel11.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 200, 30));

        jLabel15.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel15.setText("Seleccionar:");
        jPanel11.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel16.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Nuevo nombre:");
        jPanel11.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, -1, -1));

        jTextField11.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jPanel11.add(jTextField11, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 70, 320, -1));

        jPanel2.add(jPanel11);
        jPanel11.setBounds(70, 70, 360, 70);

        jPanel10.setBackground(Color.white);
        jPanel10.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel10.setEnabled(false);
        jPanel10.setMaximumSize(new java.awt.Dimension(724, 278));
        jPanel10.setName(""); // NOI18N
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField7.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jPanel10.add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 320, 30));

        jLabel13.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel13.setText("Nombre del Departamento:");
        jPanel10.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel14.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Nuevo nombre:");
        jPanel10.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, -1, -1));

        jTextField8.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jPanel10.add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 70, 320, -1));

        jPanel2.add(jPanel10);
        jPanel10.setBounds(70, 160, 610, 70);

        jLabel10.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel10.setText("Administración de Usuarios.");
        jPanel2.add(jLabel10);
        jLabel10.setBounds(70, 290, 350, 23);

        jButton3.setBackground(new java.awt.Color(0, 153, 255));
        jButton3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButton3.setText("Agregar");
        jButton3.setFocusPainted(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3);
        jButton3.setBounds(720, 180, 100, 26);

        jButton10.setBackground(new java.awt.Color(0, 153, 255));
        jButton10.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButton10.setText("Eliminar");
        jButton10.setFocusPainted(false);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton10);
        jButton10.setBounds(720, 230, 100, 26);

        jLabel17.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel17.setText("Administración de Departamentos.");
        jPanel2.add(jLabel17);
        jLabel17.setBounds(70, 30, 390, 23);

        jButton11.setBackground(new java.awt.Color(0, 153, 255));
        jButton11.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButton11.setText("Eliminar");
        jButton11.setFocusPainted(false);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton11);
        jButton11.setBounds(440, 420, 120, 26);

        jButton12.setBackground(new java.awt.Color(0, 153, 255));
        jButton12.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButton12.setText("Modificar");
        jButton12.setFocusPainted(false);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton12);
        jButton12.setBounds(250, 420, 120, 26);

        jPanel13.setBackground(Color.white);
        jPanel13.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel13.setEnabled(false);
        jPanel13.setMaximumSize(new java.awt.Dimension(724, 278));
        jPanel13.setName(""); // NOI18N
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("Departamento:");
        jPanel13.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 130, -1));

        jLabel22.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel22.setText("Cargo:");
        jPanel13.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 110, -1, -1));

        jLabel23.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel23.setText("Contraseña:");
        jPanel13.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 70, -1, -1));

        jTextField9.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jPanel13.add(jTextField9, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, 450, 30));

        jTextField13.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jPanel13.add(jTextField13, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 100, 170, 30));

        jLabel25.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel25.setText("Horario de Salida:");
        jPanel13.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 140, -1));

        jTextField17.setEditable(false);
        jTextField17.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jPanel13.add(jTextField17, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, 170, 30));

        jLabel28.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel28.setText("Usuario:");
        jPanel13.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, -1, -1));

        jLabel29.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel29.setText("Nombre Empleado:");
        jPanel13.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jComboBox4.setEditable(true);
        jComboBox4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox4ItemStateChanged(evt);
            }
        });
        jPanel13.add(jComboBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 200, 30));
        jPanel13.add(jPasswordField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 60, 170, -1));

        jButton9.setBackground(new java.awt.Color(0, 153, 255));
        jButton9.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButton9.setText("Guardar Cambios");
        jButton9.setFocusPainted(false);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 140, 170, -1));

        jSpinner1.setModel(new javax.swing.SpinnerDateModel());
        jSpinner1.setEditor(new javax.swing.JSpinner.DateEditor(jSpinner1, "hh:mm a"));
        jPanel13.add(jSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 140, -1, -1));

        jPanel2.add(jPanel13);
        jPanel13.setBounds(70, 420, 660, 190);

        jTabbedPane2.addTab("tab1", jPanel2);

        ReporteUsuario.setBackground(new java.awt.Color(243, 243, 243));

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));
        jPanel14.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel3.setText("Plazo de monitoreo:");

        jComboBox3.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Diario", "Semanal", "Mensual" }));
        jComboBox3.setSelectedItem("Semanal");
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jComboBox3, 0, 134, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        jPanel15.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 825, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 438, Short.MAX_VALUE)
        );

        jButton13.setBackground(new java.awt.Color(0, 153, 255));
        jButton13.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButton13.setText("Guardar en PDF");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ReporteUsuarioLayout = new javax.swing.GroupLayout(ReporteUsuario);
        ReporteUsuario.setLayout(ReporteUsuarioLayout);
        ReporteUsuarioLayout.setHorizontalGroup(
            ReporteUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReporteUsuarioLayout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addGroup(ReporteUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReporteUsuarioLayout.createSequentialGroup()
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(310, 310, 310))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReporteUsuarioLayout.createSequentialGroup()
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(235, 235, 235))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReporteUsuarioLayout.createSequentialGroup()
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        ReporteUsuarioLayout.setVerticalGroup(
            ReporteUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReporteUsuarioLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jTabbedPane2.addTab("tab6", ReporteUsuario);

        getContentPane().add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 0, 920, 650));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void jSpinnerFormato() {
        Calendar calendar = new GregorianCalendar();
        calendar.set(Calendar.HOUR, 12); // 

        SpinnerDateModel dateModel = new SpinnerDateModel(calendar.getTime(), null,
                null, Calendar.HOUR);
        jSpinner1.setModel(dateModel);

        JFormattedTextField tf = ((JSpinner.DefaultEditor) jSpinner1.getEditor()).getTextField();
        DefaultFormatterFactory factory = (DefaultFormatterFactory) tf.getFormatterFactory();
        DateFormatter formatter = (DateFormatter) factory.getDefaultFormatter();
        tf.setEditable(false);

        formatter.setFormat(new SimpleDateFormat("hh:mm a"));
    }

    public void PerfilUsuario() {
        try {
            File FotoPerfil = null;
            File FotoPerfil2 = null;
            if (Variables.getTipoUsuario().equals("Principal")) {
                FotoPerfil = new File("Imagenes/Fotos Perfil/Usuario Principal/" + Variables.getIdUsuario() + ".png");
                FotoPerfil2 = new File("Imagenes/Fotos Perfil/Usuario Principal/" + Variables.getIdUsuario() + ".jpg");
                Comando = Funcion.Select(st, "SELECT * FROM usuario_principal WHERE id = " + Variables.getIdUsuario() + ";");
            } else if (Variables.getTipoUsuario().equals("Secundario")) {
                FotoPerfil = new File("Imagenes/Fotos Perfil/Usuario Secundario/" + Variables.getIdUsuario() + ".png");
                FotoPerfil2 = new File("Imagenes/Fotos Perfil/Usuario Secundario/" + Variables.getIdUsuario() + ".jpg");
                Comando = Funcion.Select(st, "SELECT * FROM usuario_secundario WHERE id = " + Variables.getIdUsuario() + ";");
            }
            if (FotoPerfil.exists()) {
                ImageIcon Imagen = new ImageIcon("Imagenes/Fotos Perfil/Usuario " + Variables.getTipoUsuario() + "/" + Variables.getIdUsuario() + ".png");
                Image ImagenEscalada = Imagen.getImage().getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH);
                Icon IconoEscalado = new ImageIcon(ImagenEscalada);
                jLabel1.setIcon(IconoEscalado);
            } else if (FotoPerfil2.exists()) {
                ImageIcon Imagen = new ImageIcon("Imagenes/Fotos Perfil/Usuario " + Variables.getTipoUsuario() + "/" + Variables.getIdUsuario() + ".jpg");
                Image ImagenEscalada = Imagen.getImage().getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH);
                Icon IconoEscalado = new ImageIcon(ImagenEscalada);
                jLabel1.setIcon(IconoEscalado);
            } else {
                ImageIcon Imagen = new ImageIcon("Imagenes/Fotos Perfil/Default.png");
                Image ImagenEscalada = Imagen.getImage().getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH);
                Icon IconoEscalado = new ImageIcon(ImagenEscalada);
                jLabel1.setIcon(IconoEscalado);
            }
            while (Comando.next()) {
                jTextField5.setText(Comando.getString("nombre_usuario"));
                jTextField6.setText(Comando.getString("cargo_usuario"));
                jTextField10.setText(Comando.getString("apodo_usuario"));
                jPasswordField1.setText(Comando.getString("contrasena_usuario"));
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void filtro_dominios() {
        try {
            int numero_registros = 0, posicion = 0;
            Boolean existente = false;
            Comando = Funcion.Select(st, "SELECT COUNT(*)FROM registros;");
            while (Comando.next()) {
                numero_registros = Integer.valueOf(Comando.getObject(1).toString());
            }
            registros = new String[numero_registros][2];
            Comando = Funcion.Select(st, "SELECT area_usuario, dominio FROM registros;");
            while (Comando.next()) {
                registros[posicion][0] = Comando.getObject("dominio").toString();
                registros[posicion][1] = Comando.getObject("area_usuario").toString();
                posicion++;
            }

            for (posicion = 0; posicion < registros.length; posicion++) {
                Comando = Funcion.Select(st, "SELECT *FROM filtro_dominios WHERE dominio = '" + registros[posicion][0] + "' AND area = '" + registros[posicion][1] + "';");
                while (Comando.next()) {
                    existente = true;
                }
                if (!existente) {
                    String insercion;
                    insercion = "INSERT INTO filtro_dominios VALUES('"
                            + registros[posicion][1] + "', '"
                            + registros[posicion][0] + "', '"
                            + "No Clasificado');";
                    Funcion.Update(st, insercion);
                }
                existente = false;
            }
        } catch (Exception e) {
            System.out.println("error");
        }
    }

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        jTabbedPane2.setSelectedIndex(0);
        Color azul = new Color(0, 153, 255);
        jButton5.setBackground(azul);
        PerfilUsuario();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        jTabbedPane2.setSelectedIndex(1);
        Color azul = new Color(0, 153, 255);
        jButton6.setBackground(azul);
        Color gris = new Color(44, 44, 44);
        int i = 0;
        int Altura = 0;
        JLabel VerReporte = null;
        try {
            //Consultamos todas las areas
            Comando = Funcion.Select(st, "SELECT * FROM areas;");
            while (Comando.next()) {
                Statement st2 = Funcion.conexion();
                ResultSet Comando2 = Funcion.Select(st2, "SELECT * FROM usuario_secundario WHERE area_usuario ='" + Comando.getString("nombre_area") + "';");
                while (Comando2.next()) {
                    //Creamos un panel con alineacion a la izquierda
                    JPanel Panel = new JPanel();
                    Panel.setLayout(null);
                    jPanel8.add(Panel);
                    //Tamaño del panel
                    Panel.setSize(500, 200);
                    // La posicion y del panel ira incrementando para que no se encimen
                    Altura = 40 + (i * 220);
                    Panel.setLocation(175, Altura);
                    Panel.setBackground(Color.white);
                    Panel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    //Creamos label para mostrar los datos del cliente, el codigo html es para que al llegar al final del panel
                    //se pase a la siguiente linea y para el margen izquierdo
                    JLabel Foto = new JLabel();
                    Foto.setSize(150, 150);
                    File FotoPerfil = new File("Imagenes/Fotos Perfil/Usuario Secundario/" + Comando2.getInt("id") + ".png");
                    File FotoPerfil2 = new File("Imagenes/Fotos Perfil/Usuario Secundario/" + Comando2.getInt("id") + ".jpg");
                    if (FotoPerfil.exists()) {
                        ImageIcon Imagen = new ImageIcon("Imagenes/Fotos Perfil/Usuario Secundario/" + Comando2.getInt("id") + ".png");
                        Image ImagenEscalada = Imagen.getImage().getScaledInstance(Foto.getWidth(), Foto.getHeight(), Image.SCALE_SMOOTH);
                        Icon IconoEscalado = new ImageIcon(ImagenEscalada);
                        Foto.setIcon(IconoEscalado);
                    } else if (FotoPerfil2.exists()) {
                        ImageIcon Imagen = new ImageIcon("Imagenes/Fotos Perfil/Usuario Secundario/" + Comando2.getInt("id") + ".jpg");
                        Image ImagenEscalada = Imagen.getImage().getScaledInstance(Foto.getWidth(), Foto.getHeight(), Image.SCALE_SMOOTH);
                        Icon IconoEscalado = new ImageIcon(ImagenEscalada);
                        Foto.setIcon(IconoEscalado);
                    } else {
                        ImageIcon Imagen = new ImageIcon("Imagenes/Fotos Perfil/Default.png");
                        Image ImagenEscalada = Imagen.getImage().getScaledInstance(Foto.getWidth(), Foto.getHeight(), Image.SCALE_SMOOTH);
                        Icon IconoEscalado = new ImageIcon(ImagenEscalada);
                        Foto.setIcon(IconoEscalado);
                    }
                    //JLabel RFC = new JLabel(String.format("<html><div WIDTH=%d style='margin-left:50px;'>%s</div><html>", Panel.getWidth(), "RFC: " + "FRFOFO20402'3"));
                    //JLabel Nombre = new JLabel(String.format("<html><div WIDTH=%d style='margin-left:50px;'>%s</div><html>", Panel.getWidth(), "Nombre: " + Comando2.getString("nombre_usuario")));
                    //JLabel Cargo = new JLabel(String.format("<html><div WIDTH=%d style='margin-left:50px;'>%s</div><html>", Panel.getWidth(), "Cargo: " + Comando2.getString("cargo_usuario")));
                    //JLabel NombreUsuario = new JLabel(String.format("<html><div WIDTH=%d style='margin-left:50px;'>%s</div><html>", Panel.getWidth(), "Nombre de Usuario: " + Comando2.getString("apodo_usuario")));
                    //VerReporte = new JLabel(String.format("<html><div WIDTH=%d style='margin-left:350px;'><u>Generar Reporte</u></div><html>", Panel.getWidth()));
                    JLabel Nombre = new JLabel();
                    Nombre.setText("Nombre: " + Comando2.getString("nombre_usuario"));
                    JLabel Cargo = new JLabel("Cargo: " + Comando2.getString("cargo_usuario"));
                    JLabel NombreUsuario = new JLabel("Nombre de Usuario: " + Comando2.getString("apodo_usuario"));
                    VerReporte = new JLabel("<html><u>Generar Reporte</u></html>");
                    VerReporte.setToolTipText(Comando2.getString("id"));
                    MouseListener ml = new MouseListener() {
                        @Override
                        public void mouseReleased(MouseEvent e) {
                            //System.out.println("Released!");
                        }

                        @Override
                        public void mousePressed(MouseEvent e) {
                            //System.out.println("Pressed!");
                        }

                        @Override
                        public void mouseExited(MouseEvent e) {
                            //System.out.println("Exited!");
                        }

                        @Override
                        public void mouseEntered(MouseEvent e) {
                            //System.out.println("Entered!");
                        }

                        @Override
                        public void mouseClicked(MouseEvent e) {
                            JLabel source = (JLabel) e.getSource();
                            System.out.println(source.getToolTipText());
                            Variables.idReporte = Integer.parseInt(source.getToolTipText());
                            jTabbedPane2.setSelectedIndex(5);
                            jPanel15.removeAll();
                            GraficaBarrasUsuario(Variables.idReporte);
                            GraficaPieUsuario(Variables.idReporte);
                            jPanel15.repaint();
                        }
                    };
                    VerReporte.addMouseListener(ml);
//Fuente del texto
                    //RFC.setFont(new Font("Verdana", Font.PLAIN, 13));
                    //RFC.setForeground(gris);
                    Nombre.setFont(new Font("Verdana", Font.PLAIN, 15));
                    Nombre.setForeground(gris);
                    Cargo.setFont(new Font("Verdana", Font.PLAIN, 15));
                    Cargo.setForeground(gris);
                    NombreUsuario.setFont(new Font("Verdana", Font.PLAIN, 15));
                    NombreUsuario.setForeground(gris);
                    VerReporte.setFont(new Font("Verdana", Font.PLAIN, 15));
                    VerReporte.setForeground(azul);
                    VerReporte.setCursor(new Cursor(Cursor.HAND_CURSOR));
                    //Añadimos los label al panel correspondiente del cliente
                    //Panel.add(RFC);
                    Panel.add(Foto);
                    Panel.add(Nombre);
                    Panel.add(Cargo);
                    Panel.add(NombreUsuario);
                    Panel.add(VerReporte);
                    Foto.setLocation(10, 20);
                    Nombre.setLocation(170, 40);
                    Nombre.setSize(300, 45);
                    Cargo.setLocation(170, 60);
                    Cargo.setSize(300, 45);
                    NombreUsuario.setLocation(170, 80);
                    NombreUsuario.setSize(300, 45);
                    VerReporte.setLocation(350, 120);
                    VerReporte.setSize(300, 45);
                    i++;
                }
                //i++;
            }
            //Funcion.CerrarConsulta(Comando);
            //Comandos = Funcion.Select(st, "SELECT * FROM cliente;");
            //Ciclo para crear un panel para cada uno
        } catch (Exception ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Dependiendo de cuantos clientes se agregaron, se ajusta el tamaño del panel principal para que el scroll llegue hasta ahi
        jPanel8.setPreferredSize(new Dimension(jPanel8.getWidth(), Altura + 150));
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        jTabbedPane2.setSelectedIndex(2);
        Color azul = new Color(0, 153, 255);
        jButton7.setBackground(azul);
        jComboBox8.removeAllItems();
        Comando = Funcion.Select(st, "SELECT * FROM areas;");
        try {
            while(Comando.next()){
                jComboBox8.addItem(Comando.getObject("nombre_area"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        String dep = (String) jComboBox8.getSelectedItem();
        GraficaPieDepartamento(dep);
        GraficaBarrasDepartamento(dep);

    }//GEN-LAST:event_jButton7ActionPerformed


    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        TerminarCargar = false;
        jTabbedPane2.setSelectedIndex(3);
        Color azul = new Color(0, 153, 255);
        Color gris = new Color(44, 44, 44);
        jButton4.setBackground(azul);
        jComboBox6.removeAllItems();
        Comando = Funcion.Select(st, "SELECT * FROM areas;");
        try {
            while(Comando.next()){
                jComboBox6.addItem(Comando.getObject("nombre_area"));
            }
            TerminarCargar = true;
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        PanelesDominios();
    }//GEN-LAST:event_jButton4ActionPerformed

//***************Buton  nueva Factura**********************************//////////////
    private void jButton5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseEntered
        // TODO add your handling code here:
        Color azul = new Color(0, 182, 230);
        jButton5.setBackground(azul);
    }//GEN-LAST:event_jButton5MouseEntered

    private void jButton5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseExited
        // TODO add your handling code here:
        Color gris = new Color(44, 44, 44);
        jButton5.setBackground(gris);
    }//GEN-LAST:event_jButton5MouseExited

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5MouseClicked

    ///*****************button Azul    
    private void jButton6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseEntered
        // TODO add your handling code here:
        Color azul = new Color(0, 182, 230);
        jButton6.setBackground(azul);
    }//GEN-LAST:event_jButton6MouseEntered

    private void jButton7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseEntered
        // TODO add your handling code here:
        Color azul = new Color(0, 182, 230);
        jButton7.setBackground(azul);
    }//GEN-LAST:event_jButton7MouseEntered

    private void jButton4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseEntered
        // TODO add your handling code here:
        Color azul = new Color(0, 182, 230);
        jButton4.setBackground(azul);
    }//GEN-LAST:event_jButton4MouseEntered

//******************** Button Gris 
    private void jButton6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseExited
        // TODO add your handling code here:
        Color gris = new Color(44, 44, 44);
        jButton6.setBackground(gris);
    }//GEN-LAST:event_jButton6MouseExited

    private void jButton7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseExited
        // TODO add your handling code here:
        Color gris = new Color(44, 44, 44);
        jButton7.setBackground(gris);
    }//GEN-LAST:event_jButton7MouseExited

    private void jButton4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseExited
        // TODO add your handling code here:
        Color gris = new Color(44, 44, 44);
        jButton4.setBackground(gris);
    }//GEN-LAST:event_jButton4MouseExited

    private void jButton8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseEntered
        // TODO add your handling code here:
        Color azul = new Color(0, 182, 230);
        jButton8.setBackground(azul);
    }//GEN-LAST:event_jButton8MouseEntered

    private void jButton8MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseExited
        // TODO add your handling code here:
        Color gris = new Color(44, 44, 44);
        jButton8.setBackground(gris);
    }//GEN-LAST:event_jButton8MouseExited

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        jTabbedPane2.setSelectedIndex(4);
        jPanel13.setVisible(false);
        Color azul = new Color(0, 153, 255);
        Color gris = new Color(44, 44, 44);
        //jFormattedTextField1.setFormatterFactory();

        //jButton8.setBackground(azul);
        jButton10.setVisible(false);
        if (jComboBox1.getItemCount() <= 0) {
            jComboBox1.insertItemAt("", 0);
            jComboBox2.insertItemAt("", 0);
            jComboBox4.insertItemAt("", 0);
            try {
                Comando = Funcion.Select(st, "SELECT * FROM areas;");
                while (Comando.next()) {
                    jComboBox1.addItem(String.valueOf(Comando.getObject("nombre_area")));
                    jComboBox2.addItem(String.valueOf(Comando.getObject("nombre_area")));
                    jComboBox4.addItem(String.valueOf(Comando.getObject("nombre_area")));
                }
            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            jComboBox1.setSelectedIndex(0);
            jComboBox2.setSelectedIndex(0);
            jComboBox4.setSelectedIndex(0);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            if (!estado_BotonPerfil) {
                jTextField5.setEditable(true);
                jTextField6.setEditable(true);
                jPasswordField1.setEditable(true);
                jButton2.setText("Guardar Cambios");
                estado_BotonPerfil = true;
            } else {
                if (jTextField5.getText().equalsIgnoreCase("") || jTextField6.getText().equalsIgnoreCase("") || jTextField10.getText().equalsIgnoreCase("") || jPasswordField1.getText().toString() != "") {
                    String actualizacion;
                    actualizacion = "UPDATE usuario_principal SET"
                            + " nombre_usuario = '" + jTextField5.getText()
                            + "', cargo_usuario = '" + jTextField6.getText()
                            + "', apodo_usuario = '" + jTextField10.getText()
                            + "', contrasena_usuario = '" + jPasswordField1.getText()
                            + "' WHERE apodo_usuario = '" + jTextField10.getText() + "';";
                    Funcion.Update(st, actualizacion);
                    jTextField5.setEditable(false);
                    jTextField6.setEditable(false);
                    jPasswordField1.setEditable(false);
                    jButton2.setText("Editar Datos");
                    estado_BotonPerfil = false;
                }
            }
        } catch (Exception e) {

        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            if (estado_BotonDepa == false) {
                if (jButton3.getText().equals("Agregar")) {
                    Comando = Funcion.Select(st, "SELECT * FROM areas;");
                    while (Comando.next()) {
                        if (jTextField7.getText().equals(String.valueOf(Comando.getObject("nombre_area"))) && !jTextField7.getText().equals("")) {
                            jButton3.setText("Modificar");
                            jPanel10.setSize(610, 120);
                            jButton10.setVisible(true);
                            jTextField8.setText("");
                            jTextField7.setEditable(false);
                            estado_BotonDepa = true;
                        }
                    }
                    if (jButton3.getText().equals("Agregar")) {
                        String insercion;
                        insercion = "INSERT INTO areas VALUES ('"
                                + jTextField7.getText() + "', " //nombre del area
                                + 0 + "); "; //numero integrantes
                        Funcion.Update(st, insercion);
                        jComboBox1.addItem(jTextField7.getText());
                        jComboBox2.addItem(jTextField7.getText());
                        jComboBox4.addItem(jTextField7.getText());
                        jTextField7.setText("");
                    }
                }
            } else {
                String actualizacion;
                actualizacion = "UPDATE areas SET"
                        + " nombre_area = '" + jTextField8.getText()
                        + "' WHERE nombre_area = '" + jTextField7.getText() + "';";
                Funcion.Update(st, actualizacion);
                jButton3.setText("Agregar");
                jPanel10.setSize(610, 70);
                jTextField7.setText("");
                jTextField7.setEditable(true);
                jButton10.setVisible(false);
                estado_BotonDepa = false;
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        String eliminacion;
        eliminacion = "DELETE FROM areas"
                + " WHERE nombre_area = '" + jTextField7.getText() + "';";
        Funcion.Update(st, eliminacion);
        jPanel10.setSize(610, 70);
        jTextField7.setText("");
        jTextField7.setEditable(true);
        jButton10.setVisible(false);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        if (jComboBox1.getSelectedItem() != "") {
            jTextField7.setText(jComboBox1.getSelectedItem().toString());
            jButton3.setText("Modificar");
            jPanel10.setSize(610, 120);
            jButton10.setVisible(true);
            jTextField8.setText("");
            jTextField7.setEditable(false);
            estado_BotonDepa = true;
        } else {
            jButton3.setText("Agregar");
            jPanel10.setSize(610, 70);
            jTextField7.setText("");
            jTextField7.setEditable(true);
            jButton10.setVisible(false);
            estado_BotonDepa = false;
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        // TODO add your handling code here:
        if (jComboBox2.getSelectedItem() != "") {
            try {
                jComboBox5.removeAllItems();
                Comando = Funcion.Select(st, "SELECT *FROM usuario_secundario WHERE area_usuario = '" + jComboBox2.getSelectedItem() + "';");
                jComboBox5.addItem("");
                while (Comando.next()) {
                    jComboBox5.addItem(String.valueOf(Comando.getObject("nombre_usuario")));
                }
                jComboBox4.setSelectedIndex(0);
                jTextField9.setText("");
                jTextField13.setText("");
                jTextField17.setText("");
                jPasswordField2.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            jComboBox5.removeAllItems();
            jComboBox4.setSelectedIndex(0);
            jTextField9.setText("");
            jTextField13.setText("");
            jTextField17.setText("");
            jPasswordField2.setText("");
        }
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jComboBox4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox4ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBox4ItemStateChanged

    private void jComboBox5ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox5ItemStateChanged
        // TODO add your handling code here:
        if (jComboBox5.getSelectedItem() != "") {
            try {
                Comando = Funcion.Select(st, "SELECT *FROM usuario_secundario WHERE area_usuario = '" + jComboBox2.getSelectedItem() + "' AND nombre_usuario = '" + jComboBox5.getSelectedItem() + "';");
                while (Comando.next()) {
                    jComboBox4.setSelectedItem(jComboBox2.getSelectedItem());
                    jTextField9.setText(String.valueOf(Comando.getObject("nombre_usuario")));
                    jTextField13.setText(String.valueOf(Comando.getObject("cargo_usuario")));
                    jTextField17.setText(String.valueOf(Comando.getObject("apodo_usuario")));
                    jPasswordField2.setText(String.valueOf(Comando.getObject("contrasena_usuario")));
                }
            } catch (Exception i) {
                System.out.println(i);
            }
        } else {
            jComboBox4.setSelectedIndex(0);
            jTextField9.setText("");
            jTextField13.setText("");
            jTextField17.setText("");
            jPasswordField2.setText("");
        }
    }//GEN-LAST:event_jComboBox5ItemStateChanged

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        File Ruta = null;
        JFileChooser Examinar = new JFileChooser();
        FileNameExtensionFilter Filtro = new FileNameExtensionFilter("Image", "png", "jpg");
        Examinar.addChoosableFileFilter(Filtro);
        Examinar.setAcceptAllFileFilterUsed(false);
        Examinar.setFileFilter(Filtro);
        int Estatus = Examinar.showOpenDialog(this);
        if (Estatus == JFileChooser.APPROVE_OPTION) {
            File Origen = Examinar.getSelectedFile();
            String Extension = FilenameUtils.getExtension(Origen.getPath());
            File Copia = new File(Variables.getIdUsuario() + "." + Extension);
            if (Variables.getTipoUsuario().equals("Principal")) {
                Ruta = new File("Imagenes/Fotos Perfil/Usuario Principal");
            } else if (Variables.getTipoUsuario().equals("Secundario")) {
                Ruta = new File("Imagenes/Fotos Perfil/Usuario Secundario");
            }
            try {
                FileUtils.copyFile(Origen, Copia);
                FileUtils.copyFileToDirectory(Copia, Ruta);
                if (Extension.equals("png")) {
                    File jpg = new File("Imagenes/Fotos Perfil/Usuario " + Variables.getTipoUsuario() + "/" + Variables.getIdUsuario() + ".jpg");
                    if (jpg.exists()) {
                        jpg.delete();
                    }
                }
                if (Extension.equals("jpg")) {
                    File png = new File("Imagenes/Fotos Perfil/Usuario " + Variables.getTipoUsuario() + "/" + Variables.getIdUsuario() + ".png");
                    if (png.exists()) {
                        png.delete();
                    }
                }
                Copia.delete();
            } catch (IOException e) {
                e.printStackTrace();
            }
        } else if (Estatus == JFileChooser.CANCEL_OPTION) {
            System.out.println("Cancelar");
        }
        PerfilUsuario();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        String actualizacion;
        actualizacion = "UPDATE usuario_secundario SET"
                + " nombre_usuario = '" + jTextField9.getText()
                + "', area_usuario = '" + jComboBox4.getSelectedItem()
                + "', cargo_usuario = '" + jTextField13.getText()
                + "', horario_salida = '"
                + "', apodo_usuario = '" + jTextField17.getText()
                + "', contrasena_usuario = '" + jPasswordField2.getText()
                + "' WHERE apodo_usuario = '" + jTextField17.getText() + "'";
        Funcion.Update(st, actualizacion);
        jPanel13.setVisible(false);
        jButton11.setVisible(true);
        jButton12.setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        String eliminacion;
        eliminacion = "DELETE FROM usuario_secundario"
                + " WHERE apodo_usuario = '" + jTextField17.getText() + "' AND contrasena_usuario = '" + jPasswordField2.getText() + "';";
        Funcion.Update(st, eliminacion);
        try {
            jComboBox5.removeAllItems();
            Comando = Funcion.Select(st, "SELECT *FROM usuario_secundario WHERE area_usuario = '" + jComboBox2.getSelectedItem() + "';");
            jComboBox5.addItem("");
            while (Comando.next()) {
                jComboBox5.addItem(String.valueOf(Comando.getObject("nombre_usuario")));
            }
        } catch (Exception e) {

        }
        jComboBox4.setSelectedIndex(0);
        jTextField9.setText("");
        jTextField13.setText("");
        jTextField17.setText("");
        jPasswordField2.setText("");

    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        jPanel13.setVisible(true);
        jButton11.setVisible(false);
        jButton12.setVisible(false);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // Abriendo el dialog de pdf
        NuevoPDF pdf = new NuevoPDF("mipdf.pdf");
        pdf.main();
        Object[] options = {"Aceptar"};
        JOptionPane.showOptionDialog(null, "Reporte guardado correctamente", "Reporte generado",
                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE,
                null, options, options[0]);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jComboBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox6ActionPerformed
        // TODO add your handling code here:
        if(TerminarCargar == true){
            jPanel6.removeAll();
            PanelesDominios();
            jPanel6.repaint();
        }
    }//GEN-LAST:event_jComboBox6ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
        jPanel15.removeAll();
        GraficaBarrasUsuario(Variables.idReporte);
        GraficaPieUsuario(Variables.idReporte);
        jPanel15.repaint();
        
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        System.out.println("Se deberia guardar el pdf");
        // Abriendo el dialog de pdf
        NuevoPDF pdf = new NuevoPDF("mipdf.pdf");
        pdf.main();
        Object[] options = {"Aceptar"};
        JOptionPane.showOptionDialog(null, "Reporte guardado correctamente", "Reporte generado",
                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE,
                null, options, options[0]);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jComboBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox7ActionPerformed
        String departamento =  (String) jComboBox8.getSelectedItem();
        jPanel16.removeAll();
        GraficaPieDepartamento(departamento);
        GraficaBarrasDepartamento(departamento);
        
    }//GEN-LAST:event_jComboBox7ActionPerformed

    private void jComboBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox8ActionPerformed
        String departamento =  (String) jComboBox8.getSelectedItem();
        jPanel16.removeAll();
        GraficaPieDepartamento(departamento);
        GraficaBarrasDepartamento(departamento);
    }//GEN-LAST:event_jComboBox8ActionPerformed

    public void GraficaPieUsuario(final int idUsuario) {
        fxPanel2 = new JFXPanel();
        Platform.runLater(new Runnable() {
            @Override
            public void run() {
                String[]dominios;
                int cont = 0, tamano = 0, acep = 0, reg = 0, inac = 0, nocl = 0;
                Boolean existente = false;
                Date fecha_Actual = new Date(System.currentTimeMillis());
                Date fecha_limite = null;
                if(jComboBox3.getSelectedItem().toString().equals("Diario")){
                    fecha_limite = new Date(fecha_Actual.getTime());
                } else if(jComboBox3.getSelectedItem().toString().equals("Semanal")){
                    fecha_limite = new Date(fecha_Actual.getTime() - 7 * 24 * 3600 * 1000);
                } else if(jComboBox3.getSelectedItem().toString().equals("Mensual")){
                    fecha_limite = new Date(fecha_Actual.getTime() - 24 * 24 * 3600 * 1000);
                }
                
                Comando = Funcion.Select(st, "SELECT nombre_usuario, area_usuario FROM usuario_secundario WHERE id = " + idUsuario + ";");
                String NombreUsuario = null, area = null;
                try {
                    if (Comando.next()) {
                        NombreUsuario = Comando.getString("nombre_usuario");
                        area = Comando.getString("area_usuario");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                Comando = Funcion.Select(st, "SELECT COUNT(*) FROM (SELECT *FROM registros WHERE nombre_usuario = '" + NombreUsuario + "' AND dia_visita BETWEEN '" + fecha_limite + "' AND '" +  fecha_Actual + "' GROUP BY dominio) total;");
                try {
                    if (Comando.next()) {
                        tamano = Integer.valueOf(Comando.getObject(1).toString());
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                dominios = new String [tamano];
                System.out.println(dominios.length);
                Comando = Funcion.Select(st, "SELECT dominio FROM registros WHERE nombre_usuario = '" + NombreUsuario + "' AND dia_visita BETWEEN '" + fecha_limite + "' AND '" +  fecha_Actual + "' GROUP BY dominio;");
                try {
                    while (Comando.next()) {
                        dominios[cont] = Comando.getString("dominio");
                        cont++;
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                try{
                    for(cont = 0; cont < dominios.length; cont++){
                        Comando = Funcion.Select(st, "SELECT nivel FROM filtro_dominios WHERE area = '" + area + "' AND dominio = '" + dominios[cont] + "';");
                        //System.out.println("SELECT nivel FROM filtro_dominios WHERE area = '" + area + "' AND dominio = '" + dominios[cont] + "';");
                        while (Comando.next()) {
                            switch (Comando.getString("nivel")) {
                                case "Aceptable":
                                    acep++;
                                    break;
                                case "Regular":
                                    reg++;
                                    break;
                                case "Inaceptable":
                                    inac++;
                                    break;
                                case "No Clasificado":
                                    nocl++;
                                    break;
                            }
                            
                        }
                    }
                }catch(SQLException i){
                    System.out.println("error!!!!");
                }
                
                Scene scene = new Scene(new Group());
                ObservableList<PieChart.Data> pieChartData =
                FXCollections.observableArrayList(
                new PieChart.Data("Productivo", acep),
                new PieChart.Data("No productivo", inac),
                new PieChart.Data("Regular", reg),
                new PieChart.Data("No clasificado", nocl));
                final PieChart chart = new PieChart(pieChartData);
                chart.setTitle("Reporte de productividad");
                
                //jPanel1.setLayout(new java.awt.BorderLayout());
                
                ((Group) scene.getRoot()).getChildren().add(chart);
                fxPanel2.setScene(scene);
                fxPanel2.setSize(430, 440);
                fxPanel2.setLocation(0, 2);
                jPanel15.add(fxPanel2, BorderLayout.CENTER);

                //Charts hover
                final Label caption = new Label("");
                caption.setTextFill(javafx.scene.paint.Color.DARKORANGE);
                caption.setStyle("-fx-font: 24 arial;");

                for (final PieChart.Data data : chart.getData()) {
                    data.getNode().addEventHandler(javafx.scene.input.MouseEvent.MOUSE_PRESSED,
                        new EventHandler<javafx.scene.input.MouseEvent>() {
                            @Override public void handle(javafx.scene.input.MouseEvent e) {
                                caption.setTranslateX(e.getSceneX());
                                caption.setTranslateY(e.getSceneY());
                                caption.setText(String.valueOf(data.getPieValue()) + "%");
                             }
                        });
                }
                //Convirtiendo el chart a imagen(no cambiar el nombre de la imagen)
                WritableImage image = chart.snapshot(new SnapshotParameters(), null);
                File file = new File("chartpie.png");
                try{
                ImageIO.write(SwingFXUtils.fromFXImage(image, null), "png", file);
                }catch(Exception e){
                    System.out.println(e.getMessage());
                }    
            }
        });
        //jPanel1.add((Component)chart);    
    }
    
    public void GraficaBarrasUsuario(final int idUsuario) {
        fxPanel = new JFXPanel();
        Platform.runLater(new Runnable() {
            @Override
            public void run() {
                Comando = Funcion.Select(st, "SELECT * FROM usuario_secundario WHERE id = " + idUsuario + ";");
                String NombreUsuario = null;
                try {
                    if (Comando.next()) {
                        NombreUsuario = Comando.getString("nombre_usuario");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                final CategoryAxis xAxis = new CategoryAxis();
                final NumberAxis yAxis = new NumberAxis();
                final BarChart<String, Number> bc
                        = new BarChart<String, Number>(xAxis, yAxis);
                bc.setTitle("Páginas más visitadas.");
                xAxis.setLabel("Páginas");
                yAxis.setLabel("N° de Visitas");
                Date fecha_Actual = new Date(System.currentTimeMillis());
                Date fecha_limite = null;
                if(jComboBox3.getSelectedItem().toString().equals("Diario")){
                    fecha_limite = new Date(fecha_Actual.getTime());
                } else if(jComboBox3.getSelectedItem().toString().equals("Semanal")){
                    fecha_limite = new Date(fecha_Actual.getTime() - 7 * 24 * 3600 * 1000);
                } else if(jComboBox3.getSelectedItem().toString().equals("Mensual")){
                    fecha_limite = new Date(fecha_Actual.getTime() - 24 * 24 * 3600 * 1000);
                }
                System.out.println(fecha_limite);
                Comando = Funcion.Select(st, "(SELECT dominio, SUM(numero_visitas) num_visitas FROM registros WHERE nombre_usuario = '" + NombreUsuario + "' AND dia_visita BETWEEN '" + fecha_limite + "' AND '" +  fecha_Actual + "' GROUP BY dominio) ORDER BY num_visitas DESC LIMIT 10;");
                try {
                    while (Comando.next()) {
                        XYChart.Series series = new XYChart.Series();
                        series.setName(Comando.getString("dominio"));
                        series.getData().add(new XYChart.Data("", Double.parseDouble(Comando.getString("num_visitas"))));
                        bc.getData().add(series);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }

                Scene scene = new Scene(bc, 390, 440);
                
                //Convirtiendo el chart a imagen(no cambiar el nombre de la imagen)
                WritableImage image = bc.snapshot(new SnapshotParameters(), null);
                File file = new File("chartbarras.png");
                try{
                ImageIO.write(SwingFXUtils.fromFXImage(image, null), "png", file);
                }catch(Exception e){
                    System.out.println(e.getMessage());
                }    
                
                fxPanel.setScene(scene);
                fxPanel.setSize(390, 440);
                fxPanel.setLocation(435, 2);
                for (final XYChart.Series<String, Number> series : bc.getData()) {
                    for (final XYChart.Data<String, Number> data : series.getData()) {
                        Tooltip tooltip = new Tooltip();
                        tooltip.setText(data.getYValue().toString());
                        Tooltip.install(data.getNode(), tooltip);
                    }
                }
                System.out.println("Ancho de fxpanel : " + fxPanel.getWidth());
                jPanel15.add(fxPanel, BorderLayout.CENTER);
            }
        });
    }

    public void GraficaPieDepartamento(final String departamento) {
        fxPanel2 = new JFXPanel();
        Platform.runLater(new Runnable() {
            @Override
            public void run() {
                String[]dominios;
                int cont = 0, tamano = 0, acep = 0, reg = 0, inac = 0, nocl = 0;
                Boolean existente = false;
                Date fecha_Actual = new Date(System.currentTimeMillis());
                Date fecha_limite = null;
                if(jComboBox8.getSelectedItem().toString().equals("Diario")){
                    fecha_limite = new Date(fecha_Actual.getTime());
                } else if(jComboBox8.getSelectedItem().toString().equals("Semanal")){
                    fecha_limite = new Date(fecha_Actual.getTime() - 7 * 24 * 3600 * 1000);
                } else if(jComboBox8.getSelectedItem().toString().equals("Mensual")){
                    fecha_limite = new Date(fecha_Actual.getTime() - 24 * 24 * 3600 * 1000);
                }
                
                Comando = Funcion.Select(st, "SELECT COUNT(*) FROM (SELECT *FROM registros WHERE area_usuario = '" + departamento + "' AND dia_visita BETWEEN '" + fecha_limite + "' AND '" +  fecha_Actual + "' GROUP BY dominio) total;");
                try {
                    if (Comando.next()) {
                        tamano = Integer.valueOf(Comando.getObject(1).toString());
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                dominios = new String [tamano];
                System.out.println(dominios.length);
                Comando = Funcion.Select(st, "SELECT dominio FROM registros WHERE area_usuario = '" + departamento + "' AND dia_visita BETWEEN '" + fecha_limite + "' AND '" +  fecha_Actual + "' GROUP BY dominio;");
                try {
                    while (Comando.next()) {
                        dominios[cont] = Comando.getString("dominio");
                        cont++;
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                try{
                    for(cont = 0; cont < dominios.length; cont++){
                        Comando = Funcion.Select(st, "SELECT nivel FROM filtro_dominios WHERE area = '" + departamento + "' AND dominio = '" + dominios[cont] + "';");
                        //System.out.println("SELECT nivel FROM filtro_dominios WHERE area = '" + area + "' AND dominio = '" + dominios[cont] + "';");
                        while (Comando.next()) {
                            switch (Comando.getString("nivel")) {
                                case "Aceptable":
                                    acep++;
                                    break;
                                case "Regular":
                                    reg++;
                                    break;
                                case "Inaceptable":
                                    inac++;
                                    break;
                                case "No Clasificado":
                                    nocl++;
                                    break;
                            }
                            
                        }
                    }
                }catch(SQLException i){
                    System.out.println("error!!!!");
                }
                
                Scene scene = new Scene(new Group());
                ObservableList<PieChart.Data> pieChartData =
                FXCollections.observableArrayList(
                new PieChart.Data("Productivo", acep),
                new PieChart.Data("No productivo", inac),
                new PieChart.Data("Regular", reg),
                new PieChart.Data("No clasificado", nocl));
                final PieChart chart = new PieChart(pieChartData);
                chart.setTitle("Reporte de productividad");
                
                //jPanel1.setLayout(new java.awt.BorderLayout());
                
                ((Group) scene.getRoot()).getChildren().add(chart);
                fxPanel2.setScene(scene);
                fxPanel2.setSize(430, 440);
                fxPanel2.setLocation(0, 2);
                jPanel16.add(fxPanel2, BorderLayout.CENTER);

                //Charts hover
                final Label caption = new Label("");
                caption.setTextFill(javafx.scene.paint.Color.DARKORANGE);
                caption.setStyle("-fx-font: 24 arial;");

                for (final PieChart.Data data : chart.getData()) {
                    data.getNode().addEventHandler(javafx.scene.input.MouseEvent.MOUSE_PRESSED,
                        new EventHandler<javafx.scene.input.MouseEvent>() {
                            @Override public void handle(javafx.scene.input.MouseEvent e) {
                                caption.setTranslateX(e.getSceneX());
                                caption.setTranslateY(e.getSceneY());
                                caption.setText(String.valueOf(data.getPieValue()) + "%");
                             }
                        });
                }
                //Convirtiendo el chart a imagen(no cambiar el nombre de la imagen)
                WritableImage image = chart.snapshot(new SnapshotParameters(), null);
                File file = new File("chartpie.png");
                try{
                ImageIO.write(SwingFXUtils.fromFXImage(image, null), "png", file);
                }catch(Exception e){
                    System.out.println(e.getMessage());
                }    
            }
        });
        //jPanel1.add((Component)chart);    
    }
    
    
    public void GraficaBarrasDepartamento(final String departamento) {
        fxPanel = new JFXPanel();
        Platform.runLater(new Runnable() {
            @Override
            public void run() {
                final CategoryAxis xAxis = new CategoryAxis();
                final NumberAxis yAxis = new NumberAxis();
                final BarChart<String, Number> bc
                        = new BarChart<String, Number>(xAxis, yAxis);
                bc.setTitle("Páginas más visitadas.");
                xAxis.setLabel("Páginas");
                yAxis.setLabel("N° de Visitas");
                Date fecha_Actual = new Date(System.currentTimeMillis());
                Date fecha_limite = null;
                if(jComboBox7.getSelectedItem().toString().equals("Diario")){
                    fecha_limite = new Date(fecha_Actual.getTime());
                } else if(jComboBox7.getSelectedItem().toString().equals("Semanal")){
                    fecha_limite = new Date(fecha_Actual.getTime() - 7 * 24 * 3600 * 1000);
                } else if(jComboBox7.getSelectedItem().toString().equals("Mensual")){
                    fecha_limite = new Date(fecha_Actual.getTime() - 24 * 24 * 3600 * 1000);
                }
                System.out.println(fecha_limite);
                Comando = Funcion.Select(st, "(SELECT dominio, SUM(numero_visitas) num_visitas FROM registros WHERE area_usuario = '" + departamento + "' AND dia_visita BETWEEN '" + fecha_limite + "' AND '" +  fecha_Actual + "' GROUP BY dominio) ORDER BY num_visitas DESC LIMIT 10;");
                try {
                    while (Comando.next()) {
                        XYChart.Series series = new XYChart.Series();
                        series.setName(Comando.getString("dominio"));
                        series.getData().add(new XYChart.Data("", Double.parseDouble(Comando.getString("num_visitas"))));
                        bc.getData().add(series);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }

                Scene scene = new Scene(bc, 390, 440);
                
                //Convirtiendo el chart a imagen(no cambiar el nombre de la imagen)
                WritableImage image = bc.snapshot(new SnapshotParameters(), null);
                File file = new File("chartbarras.png");
                try{
                ImageIO.write(SwingFXUtils.fromFXImage(image, null), "png", file);
                }catch(Exception e){
                    System.out.println(e.getMessage());
                }    
                
                fxPanel.setScene(scene);
                fxPanel.setSize(390, 440);
                fxPanel.setLocation(393, 2);
                for (final XYChart.Series<String, Number> series : bc.getData()) {
                    for (final XYChart.Data<String, Number> data : series.getData()) {
                        Tooltip tooltip = new Tooltip();
                        tooltip.setText(data.getYValue().toString());
                        Tooltip.install(data.getNode(), tooltip);
                    }
                }
                System.out.println("Ancho de fxpanel : " + fxPanel.getWidth());
                jPanel16.add(fxPanel, BorderLayout.CENTER);
            }
        });
    }    
    
    public void PanelesDominios(){
        final Color gris = new Color(220, 220, 220);
        final Color naranja = new Color(248, 150, 59);
        final Color rojo = new Color(221, 76, 76);
        final Color azul = new Color(0, 153, 255);
        int Altura = 60;
        JLabel Titulo = new JLabel();
        jPanel6.add(Titulo);
        Titulo.setText("Dominio o Página Web");
        Titulo.setFont(new Font("Verdana", Font.PLAIN, 18));
        Titulo.setForeground(Color.black);
        Titulo.setSize(220, 30);
        Titulo.setLocation(60, 20);
        JLabel Titulo2 = new JLabel();
        jPanel6.add(Titulo2);
        Titulo2.setText("Estado");
        Titulo2.setFont(new Font("Verdana", Font.PLAIN, 18));
        Titulo2.setForeground(Color.black);
        Titulo2.setSize(70, 30);
        Titulo2.setLocation(470, 20);
        try {
            //Consultamos todas las areas
            Comando = Funcion.Select(st, "SELECT * FROM filtro_dominios WHERE area = '" + jComboBox6.getSelectedItem().toString() + "';");
            while (Comando.next()) {
                    //Creamos un panel con alineacion a la izquierda
                    JLabel Dominio = new JLabel();
                   jPanel6.add(Dominio);
                if (!Comando.getString("dominio").equals("")) {
                    Dominio.setText(Comando.getString("dominio"));
                    Dominio.setFont(new Font("Verdana", Font.PLAIN, 15));
                    Dominio.setForeground(Color.black);
                    Dominio.setSize(296, 30);
                    Dominio.setLocation(60, Altura);
                    final JButton Estado = new JButton();
                    jPanel6.add(Estado);
                    Estado.setText(Comando.getString("nivel"));
                    if (Estado.getText().equals("No Clasificado")) {
                        Estado.setBackground(gris);
                    } else if (Estado.getText().equals("Aceptable")) {
                        Estado.setBackground(azul);
                    } else if (Estado.getText().equals("Regular")) {
                        Estado.setBackground(naranja);
                    } else if (Estado.getText().equals("Inaceptable")) {
                        Estado.setBackground(rojo);
                    }
                    Dominio.setForeground(Color.black);
                    Estado.setSize(150, 30);
                    Estado.setLocation(450, Altura);
                    Estado.setName(Comando.getString("dominio"));
                    MouseListener ml = new MouseListener() {
                        @Override
                        public void mouseReleased(MouseEvent e) {
                            //System.out.println("Released!");
                        }

                        @Override
                        public void mousePressed(MouseEvent e) {
                            //System.out.println("Pressed!");
                        }

                        @Override
                        public void mouseExited(MouseEvent e) {
                            //System.out.println("Exited!");
                        }

                        @Override
                        public void mouseEntered(MouseEvent e) {
                            //System.out.println("Entered!");
                        }

                        @Override
                        public void mouseClicked(MouseEvent e) {
                            String[] Estados = {"Aceptable", "Regular", "Inaceptable"};
                            if (Estado.getText().equals("No Clasificado")) {
                                Estado.setText(Estados[0]);
                                Estado.setBackground(azul);
                            } else if (Estado.getText().equals("Aceptable")) {
                                Estado.setText(Estados[1]);
                                Estado.setBackground(naranja);
                            } else if (Estado.getText().equals("Regular")) {
                                Estado.setText(Estados[2]);
                                Estado.setBackground(rojo);
                            } else if (Estado.getText().equals("Inaceptable")) {
                                Estado.setText(Estados[0]);
                                Estado.setBackground(azul);
                            }
                            JButton source = (JButton) e.getSource();
                            String Query = "UPDATE filtro_dominios SET nivel = '" + Estado.getText() + "' WHERE dominio = '" + source.getName() + "' AND area = '" + jComboBox6.getSelectedItem().toString() + "';";
                            Funcion.Update(st, Query);
                        }
                    };
                    Estado.addMouseListener(ml);
                    //Tamaño del panel
                    // La posicion y del panel ira incrementando para que no se encimen
                    Altura = Altura + 40;
                    //i++;
                }
            }
            //Funcion.CerrarConsulta(Comando);
            //Comandos = Funcion.Select(st, "SELECT * FROM cliente;");
            //Ciclo para crear un panel para cada uno
        } catch (Exception ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Dependiendo de cuantos clientes se agregaron, se ajusta el tamaño del panel principal para que el scroll llegue hasta ahi
        jPanel6.setPreferredSize(new Dimension(jPanel6.getWidth(), Altura + 40));
    }
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel FiltroDominios;
    private javax.swing.JPanel ReporteUsuario;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JComboBox jComboBox7;
    private javax.swing.JComboBox jComboBox8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
